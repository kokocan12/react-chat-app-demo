{"version":3,"sources":["LeftBar.js","MemberContainer.js","Settings.js","UserArea.js","ChatBox.js","FriendsMessage.js","ChatInput.js","ChatArea.js","Loading.js","CreateServerModal.js","InviteFriendsModal.js","NoChatAlert.js","App.js","index.js"],"names":["Container","styled","div","ServerAdd","span","Server","props","selected","ContextMenuWrapper","ContextMenu","LeftBar","onClick","setServerModal","data-tooltip","servers","map","el","index","onContextMenu","evt","preventDefault","key","newServers","contextMenu","setServers","serverContextMenu","tmp","forEach","active","changeActive","name","filter","setTimeout","deleteServer","Member","Icon","img","Name","MemberContainer","MemberList","currentServer","friends","imgSrc","process","src","SettingIcon","Settings","Header","InviteButton","MemberCounter","UserArea","offContextMenu","title","setInviteModal","length","height","Message","RightCol","NameArea","Time","Contents","ChatBox","Messages","chatLog","ojunohu","hours","hours_","minutes_","minutes","Math","random","toString","content","window","innerHeight","useState","createRef","containerRef","useEffect","current","scrollTop","scrollHeight","ref","setEmojiBox","FriendsMessage","msg","includes","t","Date","getHours","getMinutes","EmojiButton","EmojiWrap","EmojiBox","ChatInput","onKeyUp","currentTarget","innerText","innerHTML","contentEditable","onFocus","suppressContentEditableWarning","emojiBox","HeaderIcon","HeaderTitle","ChatArea","bounceAnimation","keyframes","LoadingIcon","Loading","Box","form","TitleWrap","Title","TitleInput","input","SubmitButton","button","CreateServerModal","nameRef","onSubmit","value","stopPropagation","type","placeholder","FriendWrap","Image","inviting","InviteFriendsModal","inviteNewFriend","parentNode","dataset","InviteMessage","data-name","NoChatAlert","App","isLoading","setIsLoading","setCurrentServer","serverModal","inviteModal","document","selectedServerCnt","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.7bb1a79f.chunk.js","sourcesContent":["import React, {useEffect} from 'react';\r\nimport styled from 'styled-components';\r\n\r\n\r\nconst Container = styled.div`\r\n    min-width:82px;\r\n    background-color:rgb(32,34,37);\r\n    display:flex;\r\n    flex-direction:column;\r\n    align-items:center;\r\n`;\r\n\r\nconst ServerAdd = styled.span`\r\n    width:60px;\r\n    height:60px;\r\n    display:block;\r\n    border-radius:30px;\r\n    background-color:rgb(54, 57, 63);\r\n    color:rgb(67,181,129);\r\n    font-size:40px;\r\n    margin:10px 0 10px 0;\r\n    transition:200ms;\r\n    text-align:center;\r\n    user-select:none;\r\n    &:hover{\r\n        cursor: pointer;\r\n        background-color:rgb(67,181,129);\r\n        color:white;\r\n        border-radius:20px;\r\n        position:relative;\r\n    }\r\n    &:hover::after{\r\n        content:attr(data-tooltip);\r\n        position:absolute;\r\n        display:inline-block;\r\n        white-space:nowrap;\r\n        left:80px;\r\n        padding:10px;\r\n        top:6px;\r\n        color:white;\r\n        background-color:black;\r\n        font-size:20px;\r\n    }\r\n`;\r\n\r\n\r\nconst Server = styled.div`\r\n    width:60px;\r\n    height:60px;\r\n    display:block;\r\n    border-radius:${props=>props.selected==='on'? '20px':'30px'};\r\n    background-color:${props=>props.selected==='on'? '#7289DA':'#36393f'};\r\n    color:#eee;\r\n    font-size:30px;\r\n    margin:10px 0 10px 0;\r\n    line-height:60px;\r\n    transition:200ms;\r\n    text-align:center;\r\n    user-select:none;\r\n    &:hover{\r\n        cursor: pointer;\r\n        background-color:#7289DA;\r\n        color:white;\r\n        border-radius:20px;\r\n        position:relative;\r\n    }\r\n    &:hover::after{\r\n        content:attr(data-tooltip);\r\n        position:absolute;\r\n        display:inline-block;\r\n        white-space:nowrap;\r\n        left:80px;\r\n        line-height:30px;\r\n        padding:10px;\r\n        top:6px;\r\n        color:white;\r\n        background-color:black;\r\n        font-size:20px;\r\n    }\r\n`;\r\n\r\nconst ContextMenuWrapper=styled.div`\r\n    position:relative;\r\n    width:0;\r\n    height:0;\r\n`;\r\n\r\nconst ContextMenu=styled.div`\r\n    position:absolute;\r\n    width:70px;\r\n    height:40px;\r\n    left:60px;\r\n    top:-30px;\r\n    background-color:red;\r\n    color:white;\r\n    cursor:pointer;\r\n    font-size:12px;\r\n    font-weight:bold;\r\n    line-height:40px;\r\n    border-radius:10px;\r\n    z-index:100;\r\n`;\r\n\r\n\r\nfunction LeftBar(props){\r\n\r\n    const changeActive=(index)=>{\r\n        const tmp=props.servers;\r\n        tmp.forEach(el=>{\r\n            el.active=\"off\";\r\n        });\r\n        tmp[index].active=\"on\";\r\n        props.setServers([...tmp]);\r\n    }\r\n\r\n    const serverContextMenu=(key)=>{\r\n        const newServers=props.servers.map(el=>{\r\n            if(el.key===key){\r\n                const newEl={...el, contextMenu:true}\r\n                return newEl;\r\n            } else {\r\n                const newEl={...el, contextMenu:false}\r\n                return newEl;\r\n            }\r\n        });\r\n        props.setServers(newServers);\r\n    }\r\n\r\n    const deleteServer=(key)=>{\r\n        const newServers=props.servers.filter(el=>{\r\n            if(el.key!==key){\r\n                return el;\r\n            }\r\n        });\r\n        setTimeout(()=>{\r\n            props.setServers(newServers);\r\n        }, 0);\r\n        \r\n    }\r\n\r\n    return(\r\n        <Container>\r\n            <div>\r\n                <ServerAdd onClick={()=>{props.setServerModal(true)}} data-tooltip={\"채팅 추가하기\"}>+</ServerAdd>\r\n                {props.servers.map((el, index)=>{\r\n                    return <Server onContextMenu={evt=>{evt.preventDefault(); serverContextMenu(el.key)}} onClick={()=>changeActive(index)} key={el.key} selected={el.active} data-tooltip={el.name}>{el.name[0]}\r\n                                {el.contextMenu&&<ContextMenuWrapper><ContextMenu onClick={(evt)=>{evt.preventDefault(); deleteServer(el.key);}}>삭제하기</ContextMenu></ContextMenuWrapper>}\r\n                            </Server>\r\n                })}\r\n            </div>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default LeftBar;","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\n\r\nconst Container=styled.div`\r\n    padding:10px;\r\n    display:flex;\r\n    flex-grow:1;\r\n    flex-direction:column;\r\n`;\r\n\r\nconst Member=styled.div`\r\n    height:32px;\r\n    padding:3px 10px;\r\n    display:flex;\r\n    flex-direction:row;\r\n    align-items:center;\r\n    user-select:none;\r\n    &:hover{\r\n        background-color:rgb(57,60,66);\r\n        border-radius:5px;\r\n        cursor:pointer;\r\n    }\r\n    &:hover span{\r\n        color:white;\r\n    }\r\n`;\r\n\r\nconst Icon=styled.img`\r\n    width:32px;\r\n    height:32px;\r\n    border-radius:16px;\r\n    margin-right:8px;\r\n`;\r\n\r\nconst Name=styled.span`\r\n    height:20px;\r\n    font-size:16px;\r\n    color:#829297;\r\n`;\r\n\r\nfunction MemberContainer(props){\r\n\r\n    const MemberList = \r\n    props.currentServer.friends.map((el, index)=>{\r\n        let imgSrc='';\r\n        if(el==='Me'){\r\n            imgSrc=process.env.PUBLIC_URL+\"/img/default-img.jpg\";\r\n        } else if (el==='피카츄'){\r\n            imgSrc=process.env.PUBLIC_URL+\"/img/pikachu.png\";\r\n        } else if (el==='꼬부기'){\r\n            imgSrc=process.env.PUBLIC_URL+\"/img/꼬부기.jpg\";\r\n        } else if (el==='파이리'){\r\n            imgSrc=process.env.PUBLIC_URL+\"/img/파이리.png\";\r\n        } else if (el==='이상해씨'){\r\n            imgSrc=process.env.PUBLIC_URL+\"/img/이상해씨.jpg\";\r\n        }\r\n        return <Member key={index}><Icon src={imgSrc} /><Name>{el}</Name></Member>;\r\n    });\r\n\r\n    return (\r\n        <Container>\r\n            {MemberList}        \r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default MemberContainer;","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Container = styled.div`\r\n    width: 100%;\r\n    height:52px;\r\n    box-sizing:border-box;\r\n    background-color:rgb(41,43,47);\r\n    padding:0 8px;\r\n    display: flex;\r\n    flex-direction:row;\r\n    align-items:center;\r\n`;\r\n\r\nconst Icon=styled.img`\r\n    width:32px;\r\n    height:32px;\r\n    border-radius:16px;\r\n    margin-right:8px;\r\n`;\r\n\r\nconst Name=styled.span`\r\n    color:white;\r\n    font-size:14px;\r\n    height:20px;\r\n    line-height:20px;\r\n    font-weight:bold;\r\n    flex-grow:1;\r\n    user-select:none;\r\n`;\r\n\r\nconst SettingIcon=styled.img`\r\n    width:23px;\r\n    height:23px;\r\n    margin:10px;\r\n    cursor:pointer;\r\n`;\r\n\r\nfunction Settings(props){\r\n    return(\r\n        <Container>\r\n            <Icon src={process.env.PUBLIC_URL+\"/img/default-img.jpg\"} />\r\n            <Name>Me</Name>\r\n            <SettingIcon src={process.env.PUBLIC_URL+\"/img/settings-icon.jpg\"} />\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default Settings;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport MemberContainer from './MemberContainer';\r\nimport Settings from './Settings';\r\n\r\n\r\nconst Container = styled.div`\r\n    min-width:240px;\r\n    height:100%;\r\n    background-color:rgb(47,49,54);\r\n    display:flex;\r\n    flex-direction:column;\r\n`;\r\n\r\nconst Header = styled.div`\r\n    color:white;\r\n    font-size:16px;\r\n    padding:5px 16px;\r\n    font-weight:bold;\r\n    text-align:left;\r\n    box-sizing:border-box;\r\n    line-height:37px;\r\n    width:100%;\r\n    height:48px;\r\n    user-select:none;\r\n    border-bottom:solid 1px black;\r\n`;\r\n\r\nconst InviteButton=styled.div`\r\n    width:120px;\r\n    height:30px;\r\n    text-align:center;\r\n    color:white;\r\n    background-color:#7289DA;\r\n    padding:10px;\r\n    line-height:30px;\r\n    border-radius:10px;\r\n    cursor:pointer;\r\n    font-weight:500;\r\n    margin:10px auto;\r\n    &:hover{\r\n        transform:scale(1.02);\r\n    }\r\n`;\r\n\r\nconst MemberCounter = styled.div`\r\n    margin-top:10px;\r\n    height:20px;\r\n    line-height:20px;\r\n    padding:5px 20px;\r\n    color:#829297;\r\n    font-size:12px;\r\n    font-weight:600;\r\n    user-select:none;   \r\n`;\r\n\r\nfunction UserArea(props){\r\n    return(\r\n        <Container onClick={props.offContextMenu}>\r\n            <Header>{props.title}</Header>\r\n            <InviteButton onClick={()=>props.setInviteModal(true)}>친구초대하기</InviteButton>\r\n            <MemberCounter>온라인-{props.currentServer.friends.length}</MemberCounter>\r\n            <MemberContainer currentServer={props.currentServer} />\r\n            <Settings />\r\n        </Container>\r\n    )\r\n}\r\n\r\n\r\nexport default UserArea;","import React, {useState,useEffect, createRef} from 'react';\r\nimport styled from 'styled-components';\r\n\r\n\r\nconst Container = styled.div`\r\n    display:flex;\r\n    flex-direction:column;\r\n    width:100%;\r\n    flex-grow:1;\r\n    max-height:${props=>props.height};\r\n    overflow:auto;\r\n    &::-webkit-scrollbar-track{\r\n        box-shadow: inset 0 0 6px rgba(0,0,0,0.3);\r\n        border-radius: 10px;\r\n        background-color: rgb(54,57,63);\r\n    }\r\n    &::-webkit-scrollbar{\r\n        width: 12px;\r\n        background-color: rgb(54,57,63);\r\n    }\r\n    &::-webkit-scrollbar-thumb{\r\n        border-radius: 10px;\r\n        box-shadow: inset 0 0 6px rgba(0,0,0,.3);\r\n        background-color: rgb(32,34,37);\r\n    }\r\n`;\r\n\r\nconst Message=styled.div`\r\n    width:100%;\r\n    height:48px;\r\n    display:flex;\r\n    flex-direction:row;\r\n    margin:20px 0 0 0;\r\n`;\r\n\r\nconst Icon=styled.img`\r\n    width:40px;\r\n    height:40px;\r\n    border-radius:20px;\r\n    margin:5px 20px 0 20px;\r\n`;\r\n\r\nconst RightCol=styled.div`\r\n    \r\n`;\r\n\r\nconst NameArea=styled.div`\r\n    height:22px;\r\n    display:flex;\r\n    flex-direction:row;\r\n    align-items:center;\r\n`;\r\n\r\nconst Name=styled.span`\r\n    height:21px;\r\n    line-height:21px;\r\n    font-size:16px;\r\n    color:white;\r\n    margin:0 10px 0 0;\r\n`;\r\n\r\nconst Time=styled.span`\r\n    color:rgb(114,118,125);\r\n    font-size:12px;\r\n`;\r\n\r\nconst Contents=styled.div`\r\n    color:#DCDDDE;\r\n    font-size:16px;\r\n    line-height:22px;\r\n    padding-right:80px;\r\n`;\r\n\r\nconst Emoji=styled.img`\r\n    width:22px;\r\n    position:relative;\r\n    top:5px;\r\n    height:22px;\r\n    margin:0 4px 0 0;\r\n`;\r\n\r\nconst MessageType2=styled.div`\r\n    padding:0 80px 0 80px;\r\n    margin:3px 0 0 0;\r\n    color:#DCDDDE;\r\n    font-size:16px;\r\n`;\r\n\r\nfunction ChatBox(props){\r\n\r\n    const Messages=props.currentServer.chatLog.map(el=>{\r\n        let imgSrc='';\r\n        switch(el.name){\r\n            case \"Me\":\r\n                imgSrc=process.env.PUBLIC_URL+\"/img/default-img.jpg\";\r\n                break;\r\n            case \"피카츄\":\r\n                imgSrc=process.env.PUBLIC_URL+\"/img/pikachu.png\";\r\n                break;\r\n            case \"파이리\":\r\n                imgSrc=process.env.PUBLIC_URL+\"/img/파이리.png\";\r\n                break;\r\n            case \"꼬부기\":\r\n                imgSrc=process.env.PUBLIC_URL+\"/img/꼬부기.jpg\";\r\n                break;\r\n            case \"이상해씨\":\r\n                imgSrc=process.env.PUBLIC_URL+\"/img/이상해씨.jpg\";\r\n                break;\r\n        }\r\n        const ojunohu = el.hours>=12?'오후':'오전';\r\n        const hours_=el.hours>12? el.hours-12:el.hours;\r\n        const minutes_=el.minutes<10? `0${el.minutes}`:`${el.minutes}`;\r\n        return(\r\n            <Message key={Math.random().toString()}>\r\n                <Icon src={imgSrc} />\r\n                <RightCol>\r\n                    <NameArea>\r\n                        <Name>{el.name}</Name><Time>{ojunohu} {hours_}:{minutes_}</Time>\r\n                    </NameArea>\r\n                    <Contents>\r\n                        {el.content}\r\n                    </Contents>\r\n                </RightCol>\r\n            </Message>\r\n        );\r\n    });\r\n\r\n    const height=window.innerHeight-150+'px';\r\n    const [containerRef, setContainerRef] = useState(()=>createRef());\r\n    useEffect(()=>{\r\n        containerRef.current.scrollTop=containerRef.current.scrollHeight;\r\n    })\r\n    return(\r\n        <Container ref={containerRef} height={height} onClick={()=>props.setEmojiBox(false)}>\r\n            {Messages}\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default ChatBox;","import React from 'react';\r\n\r\nfunction FriendsMessage(currentServer, servers, setServers, msg){\r\n    let name=\"\";\r\n    if(msg.includes(\"피카츄\")&&currentServer.friends.includes(\"피카츄\")){\r\n        name=\"피카츄\";\r\n    } else if(msg.includes(\"파이리\")&&currentServer.friends.includes(\"파이리\")){\r\n        name=\"파이리\";\r\n    } else if(msg.includes(\"꼬부기\")&&currentServer.friends.includes(\"꼬부기\")){\r\n        name=\"꼬부기\";\r\n    } else if(msg.includes(\"이상해씨\")&&currentServer.friends.includes(\"이상해씨\")){\r\n        name=\"이상해씨\";\r\n    }\r\n\r\n    if(name!==\"\"){\r\n        const t=new Date();\r\n        \r\n        const newServers=servers.map(el=>{\r\n            if(el.key===currentServer.key){\r\n                const newEl={...el, chatLog:[...el.chatLog, {name:name, hours:t.getHours(), minutes:t.getMinutes(),\r\n                content:\"네? 저를 부르셨나요??\"}]}\r\n                return newEl;\r\n            }\r\n            return el;\r\n        });\r\n        setTimeout(()=>{setServers(newServers);},1000);\r\n    }\r\n}\r\n\r\nexport default FriendsMessage;","import React, {useState, useEffect} from 'react';\r\nimport styled from 'styled-components';\r\nimport FriendsMessage from './FriendsMessage';\r\n\r\nconst Container = styled.div`\r\n    height:68px;\r\n    padding:0 16px;\r\n    margin: 16px;\r\n    box-sizing:border-box;\r\n    background-color:rgb(64,68,75);\r\n    display:flex;\r\n    flex-direction:row;\r\n    border-radius:8px;\r\n`;\r\n\r\nconst Message = styled.div`\r\n    color:white;\r\n    margin:0;\r\n    height:100%;\r\n    flex-grow:1;\r\n    padding:8px 0;\r\n    box-sizing:border-box;\r\n    white-space:normal;\r\n    overflow:hidden;\r\n    &:focus{\r\n        outline:none;\r\n    }\r\n`;\r\n\r\nconst EmojiButton = styled.img`\r\n    width:22px;\r\n    height:22px;\r\n    margin:10px;\r\n    cursor:pointer;\r\n`;\r\n\r\nconst EmojiWrap = styled.div`\r\n    position:relative;\r\n    width:0;\r\n    height:0;\r\n`;\r\n\r\nconst EmojiBox = styled.div`\r\n    position:absolute;\r\n    width:200px;\r\n    height:80px;\r\n    left:-200px;\r\n    top:-80px;\r\n    background-color:rgb(47,49,54);\r\n    border-radius:10px;\r\n`;\r\n\r\nfunction ChatInput(props){\r\n\r\n    const submitMessage=(evt)=>{\r\n        if(evt.key==='Enter'){\r\n            const msg=evt.currentTarget.innerText;\r\n            const t=new Date();\r\n            evt.currentTarget.innerHTML=\"\";\r\n            const newServers=props.servers.map(el=>{\r\n                if(el.key===props.currentServer.key){\r\n                    const newEl={...el, chatLog:[...el.chatLog, {name:\"Me\", hours:t.getHours(), minutes:t.getMinutes(),\r\n                    content:msg}]}\r\n                    return newEl;\r\n                }\r\n                return el;\r\n            });\r\n            props.setServers(newServers);\r\n            FriendsMessage(props.currentServer, newServers, props.setServers, msg);\r\n        }\r\n    }\r\n\r\n    return(\r\n        <Container>\r\n            <Message onKeyUp={submitMessage} contentEditable={true} onFocus={()=>props.setEmojiBox(false)} suppressContentEditableWarning={true}></Message>\r\n            <EmojiButton onClick={(evt)=>props.setEmojiBox(!props.emojiBox)} src={process.env.PUBLIC_URL+\"/img/emoji-button.jpg\"}/>\r\n            {props.emojiBox&&<EmojiWrap><EmojiBox></EmojiBox></EmojiWrap>}\r\n        </Container>\r\n    );\r\n}\r\n\r\n\r\n\r\n\r\nexport default ChatInput;","import React, {useState} from 'react';\r\nimport styled from 'styled-components';\r\nimport ChatBox from './ChatBox';\r\nimport ChatInput from './ChatInput';\r\n\r\nconst Container = styled.div`\r\n    flex-grow:1;\r\n    height:100%;\r\n    background-color:#36393f;\r\n    display:flex;\r\n    flex-direction:column;\r\n`;\r\n\r\nconst Header = styled.div`\r\n    width:100%;\r\n    height:48px;\r\n    padding:0 8px;\r\n    display:flex;\r\n    flex-direction:row;\r\n    align-items:center;\r\n    box-sizing:border-box;\r\n    border-bottom:1px #000 solid;\r\n`;\r\n\r\nconst HeaderIcon = styled.img`\r\n    width:24px;\r\n    height:24px;\r\n    margin:0 10px;\r\n`;\r\n\r\nconst HeaderTitle=styled.span`\r\n    height:24px;\r\n    flex-grow:1;\r\n    font-size:16px;\r\n    font-weight:bold;\r\n    color:white;\r\n`;\r\n\r\nfunction ChatArea(props){\r\n    const [emojiBox, setEmojiBox]=useState(false);\r\n\r\n    return (\r\n    <Container onClick={props.offContextMenu}>\r\n        <Header>\r\n            <HeaderIcon src={process.env.PUBLIC_URL+\"/img/hashtag-icon.PNG\"} />\r\n            <HeaderTitle>채팅창</HeaderTitle>\r\n        </Header>\r\n        <ChatBox currentServer={props.currentServer} setEmojiBox={setEmojiBox} />\r\n        <ChatInput servers={props.servers} setServers={props.setServers} currentServer={props.currentServer} emojiBox={emojiBox} setEmojiBox={setEmojiBox} />\r\n    </Container>\r\n    );\r\n}\r\n\r\nexport default ChatArea;","import React from 'react';\r\nimport styled, {keyframes} from 'styled-components';\r\n\r\n\r\nconst bounceAnimation = keyframes`\r\n    0%   { transform: scale(1,1)      translateY(0); }\r\n    10%  { transform: scale(1.1,.9)   translateY(0); }\r\n    30%  { transform: scale(.9,1.1)   translateY(-30px); }\r\n    50%  { transform: scale(1.05,.95) translateY(0); }\r\n    57%  { transform: scale(1,1)      translateY(-7px); }\r\n    64%  { transform: scale(1,1)      translateY(0); }\r\n    100% { transform: scale(1,1)      translateY(0); }\r\n`\r\n\r\nconst Container = styled.div`\r\n    width:100%;\r\n    height:100%;\r\n    background-color:rgb(47,49,54);\r\n    display:flex;\r\n    align-items:center;\r\n    justify-content:center;\r\n    position:absolute;\r\n    left:0;\r\n    top:0;\r\n`;\r\n\r\nconst LoadingIcon = styled.img`\r\n    width:130px;\r\n    height:80px;\r\n    animation: ${bounceAnimation} 2s 1s infinite linear alternate;\r\n`;\r\n\r\nfunction Loading(){\r\n    return(\r\n        <Container>\r\n            <LoadingIcon src={process.env.PUBLIC_URL+\"/img/loading-logo.png\"} />\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Loading;","import React, {useState, createRef} from 'react';\r\nimport styled from 'styled-components';\r\n\r\n\r\nconst Container = styled.div`\r\n    position:absolute;\r\n    top:0;\r\n    left:0;\r\n    width:100%;\r\n    height:100%;\r\n    background-color:rgba(0,0,0,0.5);\r\n    display:flex;\r\n    flex-direction:column;\r\n    align-items:center;\r\n    justify-content:center;\r\n`;\r\n\r\nconst Box=styled.form`\r\n    width:540px;\r\n    height:400px;\r\n    background-color:#fff;\r\n    display:flex;\r\n    flex-direction:column;\r\n    align-items:center;\r\n    border-radius:5px;\r\n`;\r\n\r\nconst Header=styled.div`\r\n    color:#7289da;\r\n    font-size:18px;\r\n    font-weight:bold;\r\n    padding-top:10px;\r\n`;\r\n\r\nconst TitleWrap=styled.div`\r\n    margin-top:50px;\r\n    flex-grow:1;\r\n`;\r\n\r\nconst Title=styled.span`\r\n    color:#4f5660;\r\n    font-size:11px;\r\n`;\r\n\r\nconst TitleInput=styled.input`\r\n    padding:10px 4px;\r\n    outline:none;\r\n    border:none;\r\n    border-bottom:3px solid #e3e5e8;\r\n`;\r\n\r\nconst SubmitButton=styled.button`\r\n    color:white;\r\n    background-color:#7289da;\r\n    border-radius:3px;\r\n    font-size:14px;\r\n    font-weight:bold;\r\n    border:none;\r\n    width:200px;\r\n    height:50px;\r\n    margin:0 0 20px 0;\r\n`;\r\n\r\nfunction CreateServerModal(props){\r\n\r\n    const [nameRef, setNameRef] = useState(()=>createRef());\r\n\r\n    const requestNewChat=(evt)=>{\r\n        evt.preventDefault();\r\n        props.setServerModal(false);\r\n        props.servers.forEach(el=>{\r\n            el.active=\"off\";\r\n        });\r\n        props.setServers([...props.servers, {name:nameRef.current.value, active:\"on\", key:Math.random().toString(),\r\n            friends:[\"Me\"], contextMenu:false, chatLog:[]}]);\r\n    }\r\n\r\n    return (\r\n        <Container onClick={()=>{props.setServerModal(false);}}>\r\n            <Box onSubmit={requestNewChat} onClick={(evt)=>{evt.stopPropagation();}}>\r\n                <Header>채팅방 만들기</Header>\r\n                <TitleWrap>\r\n                    <Title>채팅방 이름 : </Title>\r\n                    <TitleInput ref={nameRef} type=\"text\" placeholder=\"채팅방 이름을 입력하세요.\"/>\r\n                </TitleWrap>\r\n                <SubmitButton>만들기</SubmitButton>\r\n            </Box>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default CreateServerModal;","import React, {useEffect} from 'react';\r\nimport styled from 'styled-components';\r\n\r\n\r\nconst Container = styled.div`\r\n    position:absolute;\r\n    top:0;\r\n    left:0;\r\n    width:100%;\r\n    height:100%;\r\n    background-color:rgba(0,0,0,0.5);\r\n    display:flex;\r\n    flex-direction:column;\r\n    align-items:center;\r\n    justify-content:center;\r\n`;\r\n\r\nconst Box=styled.form`\r\n    width:540px;\r\n    height:400px;\r\n    background-color:#fff;\r\n    display:flex;\r\n    flex-direction:column;\r\n    align-items:center;\r\n    border-radius:5px;\r\n`;\r\n\r\nconst Header=styled.div`\r\n    color:#7289da;\r\n    font-size:18px;\r\n    font-weight:bold;\r\n    padding-top:10px;\r\n    margin-bottom:20px;\r\n`;\r\n\r\nconst FriendWrap=styled.div`\r\n    width:250px;\r\n    height:50px;\r\n    display:flex;\r\n    flex-direction:row;\r\n    align-items:center;\r\n    margin:5px 0 10px 0;\r\n    user-select:none;\r\n`;\r\n\r\nconst Image=styled.img`\r\n    width:50px;\r\n    height:50px;\r\n    border-radius:25px;\r\n    box-sizing:border-box;\r\n    border:solid 1px black;\r\n`;\r\n\r\nconst Name=styled.span`\r\n    font-size:14px;\r\n    color:black;\r\n    flex-grow:1;\r\n`;\r\n\r\nconst InviteButton=styled.button`\r\n    background-color:${\r\n        props=>\r\n        props.inviting==='done'? '#c3c6c9':'#43b581'\r\n    };\r\n    cursor:${\r\n        props=>\r\n        props.inviting==='done'? 'normal':'pointer'\r\n    };\r\n    color:white;\r\n    border:none;\r\n    outline:none;\r\n    width:100px;\r\n    height:30px;\r\n\r\n`;\r\n\r\n\r\nfunction InviteFriendsModal(props){\r\n \r\n    const inviteNewFriend=(evt)=>{\r\n        evt.preventDefault();\r\n        const newServers=props.servers.map(el=>{\r\n            if(el.key===props.currentServer.key){\r\n                const updatedEl={\r\n                    ...props.currentServer,\r\n                    friends:[...props.currentServer.friends, evt.currentTarget.parentNode.dataset.name],\r\n                }\r\n                return updatedEl;\r\n            }\r\n            return el;\r\n        });\r\n\r\n        props.setServers(newServers);\r\n        InviteMessage(evt.currentTarget.parentNode.dataset.name, newServers);\r\n    }\r\n\r\n    const InviteMessage=(name, servers)=>{\r\n        const t=new Date();\r\n        \r\n        const newServers=servers.map(el=>{\r\n            if(el.key===props.currentServer.key){\r\n                const newEl={...el, chatLog:[...el.chatLog, {name:name, hours:t.getHours(), minutes:t.getMinutes(),\r\n                content:\"초대해주셔서 감사합니다! 저와 대화하시려면 제 이름을 불러주세요~!\"}]}\r\n                return newEl;\r\n            }\r\n            return el;\r\n        });\r\n        setTimeout(()=>{props.setServers(newServers);},1000);\r\n    }\r\n\r\n    useEffect(()=>{\r\n    })\r\n\r\n    \r\n\r\n    return (\r\n        <Container onClick={()=>{props.setInviteModal(false);}}>\r\n            <Box onClick={(evt)=>{evt.stopPropagation();}}>\r\n                <Header>친구 초대하기</Header>\r\n                <FriendWrap data-name=\"피카츄\">\r\n                    <Image src={process.env.PUBLIC_URL+\"/img/pikachu.png\"} />\r\n                    <Name>피카츄</Name>\r\n                    {props.currentServer.friends.includes(\"피카츄\")?\r\n                        <InviteButton inviting=\"done\" onClick={evt=>evt.preventDefault()}>초대됨</InviteButton>:\r\n                        <InviteButton inviting=\"yet\" onClick={inviteNewFriend}>초대하기</InviteButton>\r\n                    }\r\n                </FriendWrap>\r\n                <FriendWrap data-name=\"파이리\">\r\n                    <Image src={process.env.PUBLIC_URL+\"/img/파이리.png\"} />\r\n                    <Name>파이리</Name>\r\n                    {props.currentServer.friends.includes(\"파이리\")?\r\n                        <InviteButton inviting=\"done\" onClick={evt=>evt.preventDefault()}>초대됨</InviteButton>:\r\n                        <InviteButton inviting=\"yet\" onClick={inviteNewFriend}>초대하기</InviteButton>\r\n                    }\r\n                </FriendWrap>\r\n                <FriendWrap data-name=\"꼬부기\">\r\n                    <Image src={process.env.PUBLIC_URL+\"/img/꼬부기.jpg\"} />\r\n                    <Name>꼬부기</Name>\r\n                    {props.currentServer.friends.includes(\"꼬부기\")?\r\n                        <InviteButton inviting=\"done\" onClick={evt=>evt.preventDefault()}>초대됨</InviteButton>:\r\n                        <InviteButton inviting=\"yet\" onClick={inviteNewFriend}>초대하기</InviteButton>\r\n                    }\r\n                </FriendWrap>\r\n                <FriendWrap data-name=\"이상해씨\">\r\n                    <Image src={process.env.PUBLIC_URL+\"/img/이상해씨.jpg\"} />\r\n                    <Name>이상해씨</Name>\r\n                    {props.currentServer.friends.includes(\"이상해씨\")?\r\n                        <InviteButton inviting=\"done\" onClick={evt=>evt.preventDefault()}>초대됨</InviteButton>:\r\n                        <InviteButton inviting=\"yet\" onClick={inviteNewFriend}>초대하기</InviteButton>\r\n                    }\r\n                </FriendWrap>\r\n            </Box>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default InviteFriendsModal;","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\n\r\nconst Container = styled.div`\r\n    flex-grow:1;\r\n    background-color:rgb(54,57,63);\r\n    display:flex;\r\n    align-items:center;\r\n    justify-content:center;\r\n`;\r\n\r\nconst Message = styled.div`\r\n    font-size:32px;\r\n    color:rgb(114, 137, 218);\r\n    font-weight:bold;\r\n    user-select:none;\r\n`;\r\n\r\nfunction NoChatAlert(props){\r\n    return (\r\n        <Container>\r\n            <Message>채팅이 존재하지 않습니다.</Message>\r\n        </Container>\r\n    )\r\n}\r\n\r\n\r\nexport default NoChatAlert;","import React, {useState, useEffect} from 'react';\r\nimport styled from 'styled-components';\r\nimport LeftBar from './LeftBar';\r\nimport UserArea from './UserArea';\r\nimport ChatArea from './ChatArea';\r\nimport Loading from './Loading';\r\nimport CreateServerModal from './CreateServerModal';\r\nimport InviteFriendsModal from './InviteFriendsModal';\r\nimport NoChatAlert from './NoChatAlert';\r\n\r\nconst Container = styled.div`\r\n  position:absolute;\r\n  top:0;\r\n  left:0;\r\n  width:100%;\r\n  height:100%;\r\n  display:flex;\r\n\r\n`;\r\n\r\n\r\nfunction App(props){\r\n  const [servers, setServers] = useState([{name:\"공부\", active:\"off\", key:\"dwdwwd\", friends:[\"Me\", \"피카츄\", \"이상해씨\"], contextMenu:false,\r\nchatLog:[{name:\"Me\", hours:12, minutes:17, content:\"안녕하세요?\"}, {name:\"피카츄\", hours:12, minutes:18, content:\"초대해주셔서 감사합니다.\"}]},\r\n   {name:\"잡담\", active:\"on\", key:\"wwddda\", friends:[\"Me\"], contextMenu:false, chatLog:[{name:\"Me\", hours:6, minutes:12, content:\"반갑습니다.\"}]}]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [currentServer, setCurrentServer] = useState();\r\n  const [serverModal, setServerModal] = useState(false);\r\n  const [inviteModal, setInviteModal] = useState(false);\r\n\r\n  useEffect(()=>{\r\n    document.title=\"Chat-app\";\r\n    setTimeout(()=>{\r\n      setIsLoading(false);\r\n    },1000);\r\n  });\r\n  //현재 채팅방 설정..\r\n  useEffect(()=>{\r\n    //선택된 서버가 1개가 아닌 경우 (0또는 2~)\r\n    let selectedServerCnt=0;\r\n    servers.forEach(el=>{\r\n      if(el.active==='on'){\r\n        selectedServerCnt++;\r\n      }\r\n    });\r\n\r\n    if(selectedServerCnt===1){\r\n      servers.forEach(el=>{\r\n        if(el.active==='on'){\r\n          setCurrentServer(el);\r\n        }\r\n      });\r\n    } else {\r\n\r\n      if(servers.length>0){\r\n        const newServers=servers.map((el, index)=>{\r\n          if(index===0){\r\n            el.active='on';\r\n          } else {\r\n            el.active='off';\r\n          }\r\n          return el;\r\n        });\r\n        setServers(newServers);\r\n        }\r\n      }\r\n  });\r\n\r\n  const offContextMenu=()=>{\r\n    const newServers=servers.map(el=>{\r\n      if(el.contextMenu===true){\r\n          const newEl={...el, contextMenu:false};\r\n          return newEl;\r\n      } else {\r\n          return el;\r\n      }\r\n    });\r\n    setServers(newServers);\r\n  }\r\n\r\n  if(isLoading){\r\n    return <Loading/>;\r\n  } else {\r\n    return (\r\n      <Container>\r\n        <LeftBar offContextMenu={offContextMenu} setServerModal={setServerModal} setServers={setServers} servers={servers}/>\r\n        {servers.length>0&&\r\n        <UserArea offContextMenu={offContextMenu} title={currentServer.name} setInviteModal={setInviteModal} currentServer={currentServer} />}\r\n        {servers.length>0&&\r\n        <ChatArea currentServer={currentServer} setServers={setServers} servers={servers} offContextMenu={offContextMenu}/>}\r\n        {servers.length===0&&\r\n        <NoChatAlert />}\r\n        {serverModal&&\r\n        <CreateServerModal servers={servers} setServers={setServers} setServerModal={setServerModal} />}\r\n        {inviteModal&&\r\n        <InviteFriendsModal servers={servers} setServers={setServers} currentServer={currentServer} setInviteModal={setInviteModal} />}\r\n      </Container>\r\n  );\r\n  }\r\n  \r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}