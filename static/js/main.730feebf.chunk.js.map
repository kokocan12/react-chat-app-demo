{"version":3,"sources":["LeftBar.js","MemberContainer.js","Settings.js","UserArea.js","ChatBox.js","ChatInput.js","ChatArea.js","Loading.js","CreateServerModal.js","App.js","index.js"],"names":["Container","styled","div","ServerAdd","span","Server","props","selected","LeftBar","onClick","setServerModal","data-tooltip","servers","map","el","index","tmp","forEach","active","setServers","changeActive","key","name","Member","Icon","img","Name","MemberContainer","src","SettingIcon","Settings","Header","InviteButton","MemberCounter","UserArea","title","Message","RightCol","NameArea","Time","Contents","Emoji","MessageType2","ChatBox","EmojiButton","ChatInput","useState","contentEditable","suppressContentEditableWarning","HeaderIcon","HeaderTitle","ChatArea","bounceAnimation","keyframes","LoadingIcon","Loading","Box","form","TitleWrap","Title","TitleInput","input","SubmitButton","button","CreateServerModal","createRef","nameRef","onSubmit","evt","preventDefault","current","value","Math","random","toString","stopPropagation","ref","type","placeholder","App","friends","isLoading","setIsLoading","currentServer","setCurrentServer","serverModal","useEffect","document","setTimeout","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.730feebf.chunk.js","sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\n\r\nconst Container = styled.div`\r\n    width:82px;\r\n    background-color:rgb(32,34,37);\r\n    display:flex;\r\n    flex-direction:column;\r\n    align-items:center;\r\n`;\r\n\r\nconst ServerAdd = styled.span`\r\n    width:60px;\r\n    height:60px;\r\n    display:block;\r\n    border-radius:30px;\r\n    background-color:rgb(54, 57, 63);\r\n    color:rgb(67,181,129);\r\n    font-size:40px;\r\n    margin:10px 0 10px 0;\r\n    transition:200ms;\r\n    text-align:center;\r\n    user-select:none;\r\n    &:hover{\r\n        cursor: pointer;\r\n        background-color:rgb(67,181,129);\r\n        color:white;\r\n        border-radius:20px;\r\n        position:relative;\r\n    }\r\n    &:hover::after{\r\n        content:attr(data-tooltip);\r\n        position:absolute;\r\n        display:inline-block;\r\n        white-space:nowrap;\r\n        left:80px;\r\n        padding:10px;\r\n        top:6px;\r\n        color:white;\r\n        background-color:black;\r\n        font-size:20px;\r\n    }\r\n`;\r\n\r\n\r\nconst Server = styled.div`\r\n    width:60px;\r\n    height:60px;\r\n    display:block;\r\n    border-radius:${props=>props.selected==='on'? '20px':'30px'};\r\n    background-color:${props=>props.selected==='on'? '#7289DA':'#36393f'};\r\n    color:#eee;\r\n    font-size:30px;\r\n    margin:10px 0 10px 0;\r\n    line-height:60px;\r\n    transition:200ms;\r\n    text-align:center;\r\n    user-select:none;\r\n    &:hover{\r\n        cursor: pointer;\r\n        background-color:#7289DA;\r\n        color:white;\r\n        border-radius:20px;\r\n        position:relative;\r\n    }\r\n    &:hover::after{\r\n        content:attr(data-tooltip);\r\n        position:absolute;\r\n        display:inline-block;\r\n        white-space:nowrap;\r\n        left:80px;\r\n        line-height:30px;\r\n        padding:10px;\r\n        top:6px;\r\n        color:white;\r\n        background-color:black;\r\n        font-size:20px;\r\n    }\r\n`\r\n\r\n\r\nfunction LeftBar(props){\r\n\r\n    const changeActive=(index)=>{\r\n        const tmp=props.servers;\r\n        tmp.forEach(el=>{\r\n            el.active=\"off\";\r\n        });\r\n        tmp[index].active=\"on\";\r\n        props.setServers([...tmp]);\r\n    }\r\n\r\n\r\n    \r\n\r\n    return(\r\n        <Container>\r\n            <div>\r\n                <ServerAdd onClick={()=>{props.setServerModal(true)}} data-tooltip={\"채팅 추가하기\"}>+</ServerAdd>\r\n                {props.servers.map((el, index)=>{\r\n                    return <Server onClick={()=>changeActive(index)} key={el.key} selected={el.active} data-tooltip={el.name}>{el.name[0]}</Server>\r\n                })}\r\n            </div>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default LeftBar;","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\n\r\nconst Container=styled.div`\r\n    padding:10px;\r\n    display:flex;\r\n    flex-grow:1;\r\n    flex-direction:column;\r\n`;\r\n\r\nconst Member=styled.div`\r\n    height:32px;\r\n    padding:3px 10px;\r\n    display:flex;\r\n    flex-direction:row;\r\n    align-items:center;\r\n    user-select:none;\r\n    &:hover{\r\n        background-color:rgb(57,60,66);\r\n        border-radius:5px;\r\n        cursor:pointer;\r\n    }\r\n    &:hover span{\r\n        color:white;\r\n    }\r\n`;\r\n\r\nconst Icon=styled.img`\r\n    width:32px;\r\n    height:32px;\r\n    border-radius:16px;\r\n    margin-right:8px;\r\n    user-drag:none;\r\n`;\r\n\r\nconst Name=styled.span`\r\n    height:20px;\r\n    font-size:16px;\r\n    color:#829297;\r\n`;\r\n\r\nfunction MemberContainer(props){\r\n    return (\r\n        <Container>\r\n        <Member><Icon src={process.env.PUBLIC_URL+\"default-img.jpg\"} /><Name>Me</Name></Member>\r\n        <Member><Icon src={process.env.PUBLIC_URL+\"pikachu.png\"} /><Name>피카츄</Name></Member>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default MemberContainer;","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Container = styled.div`\r\n    width: 100%;\r\n    height:52px;\r\n    box-sizing:border-box;\r\n    background-color:rgb(41,43,47);\r\n    padding:0 8px;\r\n    display: flex;\r\n    flex-direction:row;\r\n    align-items:center;\r\n`;\r\n\r\nconst Icon=styled.img`\r\n    width:32px;\r\n    height:32px;\r\n    border-radius:16px;\r\n    margin-right:8px;\r\n`;\r\n\r\nconst Name=styled.span`\r\n    color:white;\r\n    font-size:14px;\r\n    height:20px;\r\n    line-height:20px;\r\n    font-weight:bold;\r\n    flex-grow:1;\r\n    user-select:none;\r\n`;\r\n\r\nconst SettingIcon=styled.img`\r\n    width:23px;\r\n    height:23px;\r\n    margin:10px;\r\n    cursor:pointer;\r\n`;\r\n\r\nfunction Settings(props){\r\n    return(\r\n        <Container>\r\n            <Icon src={process.env.PUBLIC_URL+\"default-img.jpg\"} />\r\n            <Name>Me</Name>\r\n            <SettingIcon src={process.env.PUBLIC_URL+\"settings-icon.png\"} />\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default Settings;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport MemberContainer from './MemberContainer';\r\nimport Settings from './Settings';\r\n\r\n\r\nconst Container = styled.div`\r\n    width:240px;\r\n    height:100%;\r\n    background-color:rgb(47,49,54);\r\n    display:flex;\r\n    flex-direction:column;\r\n`;\r\n\r\nconst Header = styled.div`\r\n    color:white;\r\n    font-size:16px;\r\n    padding:5px 16px;\r\n    font-weight:bold;\r\n    text-align:left;\r\n    box-sizing:border-box;\r\n    line-height:37px;\r\n    width:100%;\r\n    height:48px;\r\n    user-select:none;\r\n    border-bottom:solid 1px black;\r\n`;\r\n\r\nconst InviteButton=styled.div`\r\n    width:120px;\r\n    height:30px;\r\n    text-align:center;\r\n    color:white;\r\n    background-color:#7289DA;\r\n    padding:10px;\r\n    line-height:30px;\r\n    border-radius:10px;\r\n    cursor:pointer;\r\n    font-weight:500;\r\n    margin:10px auto;\r\n    &:hover{\r\n        transform:scale(1.02);\r\n    }\r\n`;\r\n\r\nconst MemberCounter = styled.div`\r\n    margin-top:10px;\r\n    height:20px;\r\n    line-height:20px;\r\n    padding:5px 20px;\r\n    color:#829297;\r\n    font-size:12px;\r\n    font-weight:600;\r\n    user-select:none;\r\n`;\r\n\r\nfunction UserArea(props){\r\n    return(\r\n        <Container>\r\n            <Header>{props.title}</Header>\r\n            <InviteButton>친구초대하기</InviteButton>\r\n            <MemberCounter>온라인-1</MemberCounter>\r\n            <MemberContainer />\r\n            <Settings />\r\n        </Container>\r\n    )\r\n}\r\n\r\n\r\nexport default UserArea;","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\n\r\nconst Container = styled.div`\r\n    display:flex;\r\n    flex-direction:column;\r\n    width:100%;\r\n    flex-grow:1;\r\n`;\r\n\r\nconst Message=styled.div`\r\n    width:100%;\r\n    height:48px;\r\n    display:flex;\r\n    flex-direction:row;\r\n    margin:20px 0 0 0;\r\n`;\r\n\r\nconst Icon=styled.img`\r\n    width:40px;\r\n    height:40px;\r\n    border-radius:20px;\r\n    margin:5px 20px 0 20px;\r\n`;\r\n\r\nconst RightCol=styled.div`\r\n    \r\n`;\r\n\r\nconst NameArea=styled.div`\r\n    height:22px;\r\n    display:flex;\r\n    flex-direction:row;\r\n    align-items:center;\r\n`;\r\n\r\nconst Name=styled.span`\r\n    height:21px;\r\n    line-height:21px;\r\n    font-size:16px;\r\n    color:white;\r\n    margin:0 10px 0 0;\r\n`;\r\n\r\nconst Time=styled.span`\r\n    color:rgb(114,118,125);\r\n    font-size:12px;\r\n`;\r\n\r\nconst Contents=styled.div`\r\n    color:#DCDDDE;\r\n    font-size:16px;\r\n    line-height:22px;\r\n    padding-right:80px;\r\n`;\r\n\r\nconst Emoji=styled.img`\r\n    width:22px;\r\n    position:relative;\r\n    top:5px;\r\n    height:22px;\r\n    margin:0 4px 0 0;\r\n`;\r\n\r\nconst MessageType2=styled.div`\r\n    padding:0 80px 0 80px;\r\n    margin:3px 0 0 0;\r\n    color:#DCDDDE;\r\n    font-size:16px;\r\n`;\r\n\r\nfunction ChatBox(props){\r\n    return(\r\n        <Container>\r\n            <Message>\r\n                <Icon src={process.env.PUBLIC_URL+\"default-img.jpg\"} />\r\n                <RightCol>\r\n                    <NameArea>\r\n                        <Name>Me</Name><Time>오후 8:55</Time>\r\n                    </NameArea>\r\n                    <Contents>\r\n                        <Emoji src={process.env.PUBLIC_URL+\"emoji/깜찍.svg\"} />\r\n                        안녕하세요\r\n                    </Contents>\r\n                </RightCol>\r\n            </Message>\r\n            <MessageType2>\r\n                반가워요\r\n                <Emoji src={process.env.PUBLIC_URL+\"emoji/깜찍.svg\"} />\r\n            </MessageType2>\r\n            <Message>\r\n                <Icon src={process.env.PUBLIC_URL+\"default-img.jpg\"} />\r\n                <RightCol>\r\n                    <NameArea>\r\n                        <Name>Me</Name><Time>오후 9:50</Time>\r\n                    </NameArea>\r\n                    <Contents>\r\n                        <Emoji src={process.env.PUBLIC_URL+\"emoji/깜찍.svg\"} />\r\n                        그래요 그래요~그래요 그래요~그래요 그래요~그래요 그래요~그래요 그래요~그래요 그래요~그래요 그래요~그래요 그래요~\r\n                        <Emoji src={process.env.PUBLIC_URL+\"emoji/깜찍.svg\"} />sdsadsadsadsaㅇㄴㅁㅇㄴㅁㅇㄴㅁ\r\n                    </Contents>\r\n                </RightCol>\r\n            </Message>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default ChatBox;","import React, {useState, useEffect} from 'react';\r\nimport styled from 'styled-components';\r\n\r\n\r\nconst Container = styled.div`\r\n    height:68px;\r\n    padding:0 16px;\r\n    margin: 16px;\r\n    box-sizing:border-box;\r\n    background-color:rgb(64,68,75);\r\n    display:flex;\r\n    flex-direction:row;\r\n    border-radius:8px;\r\n`;\r\n\r\nconst Message = styled.div`\r\n    color:white;\r\n    margin:0;\r\n    height:100%;\r\n    flex-grow:1;\r\n    padding:8px 0;\r\n    box-sizing:border-box;\r\n    white-space:normal;\r\n    overflow:hidden;\r\n    &:focus{\r\n        outline:none;\r\n    }\r\n`;\r\n\r\nconst EmojiButton = styled.img`\r\n    width:22px;\r\n    height:22px;\r\n    margin:10px;\r\n`;\r\n\r\nfunction ChatInput(props){\r\n\r\n    const [msg, setMsg]=useState('채팅창자리');\r\n    const updateMsg=(str)=>{\r\n        setMsg(msg+str);\r\n    }\r\n\r\n    return(\r\n        <Container>\r\n            <Message contentEditable={true} suppressContentEditableWarning={true}>채팅창자리</Message>\r\n            <EmojiButton src={process.env.PUBLIC_URL+\"EmojiButton.PNG\"}/>\r\n        </Container>\r\n    );\r\n}\r\n\r\n\r\nexport default ChatInput;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport ChatBox from './ChatBox';\r\nimport ChatInput from './ChatInput';\r\n\r\nconst Container = styled.div`\r\n    flex-grow:1;\r\n    height:100%;\r\n    background-color:#36393f;\r\n    display:flex;\r\n    flex-direction:column;\r\n`;\r\n\r\nconst Header = styled.div`\r\n    width:100%;\r\n    height:48px;\r\n    padding:0 8px;\r\n    display:flex;\r\n    flex-direction:row;\r\n    align-items:center;\r\n    box-sizing:border-box;\r\n    border-bottom:1px #000 solid;\r\n`;\r\n\r\nconst HeaderIcon = styled.img`\r\n    width:24px;\r\n    height:24px;\r\n    margin:0 10px;\r\n`;\r\n\r\nconst HeaderTitle=styled.span`\r\n    height:24px;\r\n    flex-grow:1;\r\n    font-size:16px;\r\n    font-weight:bold;\r\n    color:white;\r\n`;\r\n\r\nfunction ChatArea(props){\r\n    return (\r\n    <Container>\r\n        <Header>\r\n            <HeaderIcon src={process.env.PUBLIC_URL+\"hashtag-icon.PNG\"} />\r\n            <HeaderTitle>채팅창</HeaderTitle>\r\n        </Header>\r\n        <ChatBox />\r\n        <ChatInput />\r\n    </Container>\r\n    );\r\n}\r\n\r\nexport default ChatArea;","import React from 'react';\r\nimport styled, {keyframes} from 'styled-components';\r\n\r\n\r\nconst bounceAnimation = keyframes`\r\n    0%   { transform: scale(1,1)      translateY(0); }\r\n    10%  { transform: scale(1.1,.9)   translateY(0); }\r\n    30%  { transform: scale(.9,1.1)   translateY(-30px); }\r\n    50%  { transform: scale(1.05,.95) translateY(0); }\r\n    57%  { transform: scale(1,1)      translateY(-7px); }\r\n    64%  { transform: scale(1,1)      translateY(0); }\r\n    100% { transform: scale(1,1)      translateY(0); }\r\n`\r\n\r\nconst Container = styled.div`\r\n    width:100%;\r\n    height:100%;\r\n    background-color:rgb(47,49,54);\r\n    display:flex;\r\n    align-items:center;\r\n    justify-content:center;\r\n    position:absolute;\r\n    left:0;\r\n    top:0;\r\n`;\r\n\r\nconst LoadingIcon = styled.img`\r\n    width:130px;\r\n    height:80px;\r\n    animation: ${bounceAnimation} 2s 1s infinite linear alternate;\r\n`;\r\n\r\nfunction Loading(){\r\n    return(\r\n        <Container>\r\n            <LoadingIcon src={process.env.PUBLIC_URL+\"/loading-logo.png\"} />\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Loading;","import React, {useState, createRef} from 'react';\r\nimport styled from 'styled-components';\r\n\r\n\r\nconst Container = styled.div`\r\n    position:absolute;\r\n    top:0;\r\n    left:0;\r\n    width:100%;\r\n    height:100%;\r\n    background-color:rgba(0,0,0,0.5);\r\n    display:flex;\r\n    flex-direction:column;\r\n    align-items:center;\r\n    justify-content:center;\r\n`;\r\n\r\nconst Box=styled.form`\r\n    width:540px;\r\n    height:400px;\r\n    background-color:#fff;\r\n    display:flex;\r\n    flex-direction:column;\r\n    align-items:center;\r\n    border-radius:5px;\r\n`;\r\n\r\nconst Header=styled.div`\r\n    color:#7289da;\r\n    font-size:18px;\r\n    font-weight:bold;\r\n    padding-top:10px;\r\n`;\r\n\r\nconst TitleWrap=styled.div`\r\n    margin-top:50px;\r\n    flex-grow:1;\r\n`;\r\n\r\nconst Title=styled.span`\r\n    color:#4f5660;\r\n    font-size:11px;\r\n`;\r\n\r\nconst TitleInput=styled.input`\r\n    padding:10px 4px;\r\n    outline:none;\r\n    border:none;\r\n    border-bottom:3px solid #e3e5e8;\r\n`;\r\n\r\nconst SubmitButton=styled.button`\r\n    color:white;\r\n    background-color:#7289da;\r\n    border-radius:3px;\r\n    font-size:14px;\r\n    font-weight:bold;\r\n    border:none;\r\n    width:200px;\r\n    height:50px;\r\n    margin:0 0 20px 0;\r\n`;\r\n\r\nfunction CreateServerModal(props){\r\n\r\n    const [nameRef, setNameRef] = useState(()=>createRef());\r\n\r\n    const requestNewChat=(evt)=>{\r\n        evt.preventDefault();\r\n        props.setServerModal(false);\r\n        props.servers.forEach(el=>{\r\n            el.active=\"off\";\r\n        });\r\n        props.setServers([...props.servers, {name:nameRef.current.value, active:\"on\", key:Math.random().toString()}]);\r\n    }\r\n\r\n    return (\r\n        <Container onClick={()=>{props.setServerModal(false);}}>\r\n            <Box onSubmit={requestNewChat} onClick={(evt)=>{evt.stopPropagation();}}>\r\n                <Header>채팅방 만들기</Header>\r\n                <TitleWrap>\r\n                    <Title>채팅방 이름 : </Title>\r\n                    <TitleInput ref={nameRef} type=\"text\" placeholder=\"채팅방 이름을 입력하세요.\"/>\r\n                </TitleWrap>\r\n                <SubmitButton>만들기</SubmitButton>\r\n            </Box>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default CreateServerModal;","import React, {useState, useEffect} from 'react';\r\nimport styled from 'styled-components';\r\nimport LeftBar from './LeftBar';\r\nimport UserArea from './UserArea';\r\nimport ChatArea from './ChatArea';\r\nimport Loading from './Loading';\r\nimport CreateServerModal from './CreateServerModal';\r\n\r\nconst Container = styled.div`\r\n  position:absolute;\r\n  top:0;\r\n  left:0;\r\n  width:100%;\r\n  height:100%;\r\n  display:flex;\r\n\r\n`;\r\n\r\n\r\nfunction App(props){\r\n  const [servers, setServers] = useState([{name:\"공부\", active:\"off\", key:\"dwdwwd\", friends:[\"Me\", \"피카츄\"]},\r\n   {name:\"잡담\", active:\"on\", key:\"wwddda\", friends:[\"Me\"]}]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [currentServer, setCurrentServer] = useState();\r\n  const [serverModal, setServerModal] = useState(false);\r\n  useEffect(()=>{\r\n    document.title=\"Chat-app\";\r\n    setTimeout(()=>{\r\n      setIsLoading(false);\r\n    },1000);\r\n  });\r\n  //현재 채팅방 설정..\r\n  useEffect(()=>{\r\n    servers.forEach(el=>{\r\n      if(el.active==='on'){\r\n        setCurrentServer(el);\r\n      }\r\n    })\r\n  });\r\n\r\n  if(isLoading){\r\n    return <Loading/>;\r\n  } else {\r\n    return (\r\n      <Container>\r\n        <LeftBar setServerModal={setServerModal} setServers={setServers} servers={servers}/>\r\n        <UserArea title={currentServer.name} currentServer={currentServer} setCurrentServer={setCurrentServer} />\r\n        <ChatArea />\r\n        {serverModal&&<CreateServerModal servers={servers} setServers={setServers} setServerModal={setServerModal} />}\r\n      </Container>\r\n  );\r\n  }\r\n  \r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}