{"version":3,"sources":["reducers/index.js","apis/jsonPlaceholder.js","apis/webSocket.js","actions/index.js","components/ChatRoomList.js","components/MemberContainer.js","components/Settings.js","components/UserArea.js","components/ChatBox.js","components/ChatInput.js","components/ChatArea.js","components/Loading.js","components/CreateChatModal.js","components/NoChatAlert.js","components/TotalUserModal.js","components/App.js","index.js"],"names":["combineReducers","chatRoomList","chatList","action","type","payload","selectedChatRoom","chatRoom","chatLog","myId","name","userList","createChatRoomModal","totalUserModal","state","jsonPlaceholder","axios","create","baseURL","ws","SockJs","selectChatRoom","chatRoomTitle","json","payload1","payload2","msg","JSON","stringify","send","dispatch","a","get","response","title","data","updateUser","setId","reverseTotalUserModal","Container","styled","div","ServerAdd","span","Server","props","selected","connect","fetchChatRoomList","useEffect","serverList","map","el","key","onClick","data-tooltip","openCreateChatRoom","Member","Icon","img","Name","MemberContainer","MemberList","index","src","process","SettingIcon","Settings","Header","InviteButton","MemberCounter","filter","chat","length","height","Message","RightCol","NameArea","Time","Contents","Messages","ojunohu","hours","hours_","minutes_","minutes","Math","random","toString","writer","years","months","days","content","window","innerHeight","useState","createRef","containerRef","current","scrollTop","scrollHeight","ref","setEmojiBox","EmojiButton","EmojiWrap","EmojiBox","createNewChatLog","post","onKeyUp","evt","currentTarget","innerText","t","Date","innerHTML","msgObj","Number","getFullYear","getMonth","getDate","getHours","getMinutes","obj1","contentEditable","onFocus","suppressContentEditableWarning","emojiBox","HeaderIcon","HeaderTitle","ChatArea","bounceAnimation","keyframes","LoadingMsg","h1","Loading","Box","form","TitleWrap","Title","TitleInput","input","SubmitButton","button","closeCreateChatRoom","createNewChat","nameRef","useRef","onSubmit","preventDefault","value","friends","contextMenu","stopPropagation","placeholder","NoChatAlert","FriendWrap","Image","inviting","boxRef","onBoxClick","contains","target","setTimeout","document","body","addEventListener","removeEventListener","loc","updateSocketChatLog","parse","createModal","loading","setLoading","onmessage","onopen","console","log","onclose","store","createStore","reducers","applyMiddleware","thunk","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.badfff10.chunk.js","sourcesContent":["import { combineReducers } from 'redux';\r\n\r\nconst chatRoomListReducer = (chatList = [], action) => {\r\n    switch (action.type) {\r\n        case 'FETCH_CHAT_ROOM':\r\n            return action.payload;\r\n        default:\r\n            return chatList;\r\n    }\r\n};\r\n\r\nconst selectedChatRoomReducer = (chatRoom = null, action) => {\r\n    switch (action.type) {\r\n        case 'SELECT_CHAT_ROOM':\r\n            return action.payload;\r\n        case 'SOCKET_CHAT_UPDATE':\r\n            return {\r\n                ...chatRoom,\r\n                chatLog: [\r\n                    ...chatRoom.chatLog,\r\n                    action.payload\r\n                ]\r\n            }\r\n        default:\r\n            return chatRoom;\r\n    }\r\n};\r\n\r\n\r\nconst createChatRoomModalReducer = (createChatRoomModal = false, action) => {\r\n    if (action.type === 'CREATE_MODAL_ON') {\r\n        return true;\r\n    }\r\n\r\n    if (action.type === 'CREATE_MODAL_OFF') {\r\n        return false;\r\n    }\r\n\r\n    return createChatRoomModal;\r\n};\r\n\r\nconst totalUserModalReducer = (state = false, action) => {\r\n    if (action.type === 'REVERSE_TOTAL_USER_MODAL') {\r\n        return !state;\r\n    }\r\n    return state;\r\n};\r\n\r\nconst myIdReducer = (name = '', action) => {\r\n    if (action.type === 'SET_ID') {\r\n        return action.payload;\r\n    }\r\n\r\n    return name;\r\n};\r\n\r\nconst userListReducer = (userList = [], action) => {\r\n    if (action.type == 'UPDATE_USER_INFO') {\r\n        return action.payload;\r\n    }\r\n    return userList;\r\n};\r\n\r\nexport default combineReducers({\r\n    chatRoomList: chatRoomListReducer,\r\n    selectedChatRoom: selectedChatRoomReducer,\r\n    myId: myIdReducer,\r\n    userList: userListReducer,\r\n    createChatRoomModal: createChatRoomModalReducer,\r\n    totalUserModal: totalUserModalReducer\r\n});","import axios from 'axios';\r\n\r\nconst jsonPlaceholder = axios.create({\r\n    baseURL: 'https://javabuildtest.df.r.appspot.com'\r\n});\r\n\r\nexport default jsonPlaceholder;","import SockJs from 'sockjs-client';\r\n\r\nconst ws = new SockJs('https://javabuildtest.df.r.appspot.com/websocket');\r\n\r\nexport default ws;\r\n","import jsonPlaceholder from \"../apis/jsonPlaceholder\";\r\nimport ws from '../apis/webSocket';\r\n\r\n// Action creator\r\nexport const fetchChatRoomList = () => {\r\n    return async (dispatch) => {\r\n        const response = await jsonPlaceholder.get('/api/chat-room');\r\n        dispatch({\r\n                type: 'FETCH_CHAT_ROOM',\r\n                payload: response.data\r\n        });\r\n        \r\n    };\r\n};\r\n\r\nexport const selectChatRoom = (chatRoomTitle, myId) => {\r\n\r\n    const json = {\r\n        type: 'CHANGE_CHAT_ROOM',\r\n        payload1: myId,\r\n        payload2: chatRoomTitle\r\n    };\r\n    const msg = JSON.stringify(json);\r\n    ws.send(msg);\r\n    \r\n    return async (dispatch) => {\r\n        const response = await jsonPlaceholder.get(`/api/chat-log/${chatRoomTitle}`);\r\n        dispatch({\r\n            type: 'SELECT_CHAT_ROOM',\r\n            payload: {\r\n                title: chatRoomTitle,\r\n                chatLog: response.data\r\n            }\r\n        });\r\n    };\r\n};\r\n\r\nexport const createNewChat = (chat) => {\r\n    return {\r\n        type: 'CREATE_NEW_CHAT',\r\n        payload: chat\r\n    };\r\n};\r\n\r\nexport const openCreateChatRoom = () => {\r\n    return {\r\n        type: 'CREATE_MODAL_ON'\r\n    };\r\n};\r\n\r\nexport const closeCreateChatRoom = () => {\r\n    return {\r\n        type: 'CREATE_MODAL_OFF'\r\n    };\r\n};\r\n\r\nexport const createNewChatLog = (chatLog) => {\r\n    return async (dispatch) => {\r\n        await jsonPlaceholder.post('/api/chat-log', {\r\n            chatRoomTitle: chatLog.chatRoomTitle,\r\n            writer: chatLog.writer,\r\n            years: chatLog.years,\r\n            months: chatLog.months,\r\n            days: chatLog.days,\r\n            hours: chatLog.hours,\r\n            minutes: chatLog.minutes,\r\n            content: chatLog.content\r\n        });\r\n    };\r\n};\r\n\r\nexport const updateUser = (payload1) => {\r\n    return {\r\n            type: 'UPDATE_USER_INFO',\r\n            payload: payload1\r\n    };\r\n};\r\n\r\nexport const setId = (action) => {\r\n    return {\r\n        type: action.type,\r\n        payload: action.payload1\r\n    };\r\n};\r\n\r\nexport const updateSocketChatLog = (data) => {\r\n    const d = JSON.parse(data);\r\n    return {\r\n        type: 'SOCKET_CHAT_UPDATE',\r\n        payload: d\r\n    };\r\n};\r\n\r\nexport const reverseTotalUserModal = () => {\r\n    return {\r\n        type: 'REVERSE_TOTAL_USER_MODAL'\r\n    };\r\n};","import React, { useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport styled from 'styled-components';\r\n\r\nimport { fetchChatRoomList, selectChatRoom, updateUser } from '../actions';\r\n\r\n\r\nconst Container = styled.div`\r\n    min-width:82px;\r\n    background-color:rgb(32,34,37);\r\n    display:flex;\r\n    flex-direction:column;\r\n    align-items:center;\r\n`;\r\n\r\nconst ServerAdd = styled.span`\r\n    width:60px;\r\n    height:60px;\r\n    display:block;\r\n    border-radius:30px;\r\n    background-color:rgb(54, 57, 63);\r\n    color:rgb(67,181,129);\r\n    font-size:40px;\r\n    margin:10px 0 10px 0;\r\n    transition:200ms;\r\n    text-align:center;\r\n    user-select:none;\r\n    &:hover{\r\n        cursor: pointer;\r\n        background-color:rgb(67,181,129);\r\n        color:white;\r\n        border-radius:20px;\r\n        position:relative;\r\n    }\r\n    &:hover::after{\r\n        content:attr(data-tooltip);\r\n        position:absolute;\r\n        display:inline-block;\r\n        white-space:nowrap;\r\n        left:80px;\r\n        padding:10px;\r\n        top:6px;\r\n        color:white;\r\n        background-color:black;\r\n        font-size:20px;\r\n    }\r\n`;\r\n\r\n\r\nconst Server = styled.div`\r\n    width:60px;\r\n    height:60px;\r\n    display:block;\r\n    border-radius:${props=>props.selected? '20px':'30px'};\r\n    background-color:${props=>props.selected? '#7289DA':'#36393f'};\r\n    color:#eee;\r\n    font-size:30px;\r\n    margin:10px 0 10px 0;\r\n    line-height:60px;\r\n    transition:200ms;\r\n    text-align:center;\r\n    user-select:none;\r\n    &:hover{\r\n        cursor: pointer;\r\n        background-color:#7289DA;\r\n        color:white;\r\n        border-radius:20px;\r\n        position:relative;\r\n    }\r\n    &:hover::after{\r\n        content:attr(data-tooltip);\r\n        position:absolute;\r\n        display:inline-block;\r\n        white-space:nowrap;\r\n        left:80px;\r\n        line-height:30px;\r\n        padding:10px;\r\n        top:6px;\r\n        color:white;\r\n        background-color:black;\r\n        font-size:20px;\r\n    }\r\n`;\r\n\r\nconst ContextMenuWrapper=styled.div`\r\n    position:relative;\r\n    width:0;\r\n    height:0;\r\n`;\r\n\r\nconst ContextMenu=styled.div`\r\n    position:absolute;\r\n    width:70px;\r\n    height:40px;\r\n    left:60px;\r\n    top:-30px;\r\n    background-color:red;\r\n    color:white;\r\n    cursor:pointer;\r\n    font-size:12px;\r\n    font-weight:bold;\r\n    line-height:40px;\r\n    border-radius:10px;\r\n    z-index:100;\r\n`;\r\n\r\n\r\nconst ChatRoomList = (props) => {\r\n\r\n    useEffect(() => {\r\n        props.fetchChatRoomList();\r\n    }, []);\r\n\r\n\r\n    const serverList = props.chatRoomList.map(el => {\r\n        let selected;\r\n        if(props.selectedChatRoom){\r\n            selected=props.selectedChatRoom.title===el.title;\r\n        }\r\n        return (\r\n            <Server\r\n                key={el.title}\r\n                onClick={()=>{props.selectChatRoom(el.title, props.myId); updateUser([1,2,3]);}}\r\n                selected={selected}\r\n                data-tooltip={el.title}>\r\n                {el.title[0]}\r\n            </Server>\r\n        );\r\n    });\r\n\r\n    return(\r\n        <Container>\r\n            <div>\r\n                <ServerAdd onClick={props.openCreateChatRoom} data-tooltip={\"채팅 추가하기\"}>+</ServerAdd>\r\n                {serverList}\r\n            </div>\r\n        </Container>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return state;\r\n};\r\n\r\nexport default connect(mapStateToProps, { fetchChatRoomList, selectChatRoom, updateUser })(ChatRoomList);","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\n\r\nconst Container=styled.div`\r\n    padding:10px;\r\n    display:flex;\r\n    flex-grow:1;\r\n    flex-direction:column;\r\n`;\r\n\r\nconst Member=styled.div`\r\n    height:32px;\r\n    padding:3px 10px;\r\n    display:flex;\r\n    flex-direction:row;\r\n    align-items:center;\r\n    user-select:none;\r\n    &:hover{\r\n        background-color:rgb(57,60,66);\r\n        border-radius:5px;\r\n        cursor:pointer;\r\n    }\r\n    &:hover span{\r\n        color:white;\r\n    }\r\n`;\r\n\r\nconst Icon=styled.img`\r\n    width:32px;\r\n    height:32px;\r\n    border-radius:16px;\r\n    margin-right:8px;\r\n`;\r\n\r\nconst Name=styled.span`\r\n    height:20px;\r\n    font-size:16px;\r\n    color:#829297;\r\n`;\r\n\r\nfunction MemberContainer(props){\r\n\r\n    const MemberList = \r\n    props.userList.map((el, index)=>{\r\n        let imgSrc=process.env.PUBLIC_URL+\"/img/default-img.jpg\";\r\n        \r\n        return <Member key={index}><Icon src={imgSrc} /><Name>{el.name}</Name></Member>;\r\n    });\r\n\r\n    return (\r\n        <Container>\r\n            {MemberList}        \r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default MemberContainer;","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Container = styled.div`\r\n    width: 100%;\r\n    height:52px;\r\n    box-sizing:border-box;\r\n    background-color:rgb(41,43,47);\r\n    padding:0 8px;\r\n    display: flex;\r\n    flex-direction:row;\r\n    align-items:center;\r\n`;\r\n\r\nconst Icon=styled.img`\r\n    width:32px;\r\n    height:32px;\r\n    border-radius:16px;\r\n    margin-right:8px;\r\n`;\r\n\r\nconst Name=styled.span`\r\n    color:white;\r\n    font-size:14px;\r\n    height:20px;\r\n    line-height:20px;\r\n    font-weight:bold;\r\n    flex-grow:1;\r\n    user-select:none;\r\n`;\r\n\r\nconst SettingIcon=styled.img`\r\n    width:23px;\r\n    height:23px;\r\n    margin:10px;\r\n    cursor:pointer;\r\n`;\r\n\r\nfunction Settings(props){\r\n    return(\r\n        <Container>\r\n            <Icon src={process.env.PUBLIC_URL+\"/img/default-img.jpg\"} />\r\n            <Name>{props.myId}</Name>\r\n            <SettingIcon src={process.env.PUBLIC_URL+\"/img/settings-icon.jpg\"} />\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default Settings;","import React, { useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { setId, updateUser, reverseTotalUserModal } from '../actions';\r\nimport MemberContainer from './MemberContainer';\r\nimport Settings from './Settings';\r\n\r\n\r\nconst Container = styled.div`\r\n    min-width:240px;\r\n    height:100%;\r\n    background-color:rgb(47,49,54);\r\n    display:flex;\r\n    flex-direction:column;\r\n`;\r\n\r\nconst Header = styled.div`\r\n    color:white;\r\n    font-size:16px;\r\n    padding:5px 16px;\r\n    font-weight:bold;\r\n    text-align:left;\r\n    box-sizing:border-box;\r\n    line-height:37px;\r\n    width:100%;\r\n    height:48px;\r\n    user-select:none;\r\n    border-bottom:solid 1px black;\r\n`;\r\n\r\nconst InviteButton=styled.div`\r\n    width:120px;\r\n    height:30px;\r\n    text-align:center;\r\n    color:white;\r\n    background-color:#7289DA;\r\n    padding:10px;\r\n    line-height:30px;\r\n    border-radius:10px;\r\n    cursor:pointer;\r\n    font-weight:500;\r\n    margin:10px auto;\r\n    &:hover{\r\n        transform:scale(1.02);\r\n    }\r\n`;\r\n\r\nconst MemberCounter = styled.div`\r\n    margin-top:10px;\r\n    height:20px;\r\n    line-height:20px;\r\n    padding:5px 20px;\r\n    color:#829297;\r\n    font-size:12px;\r\n    font-weight:600;\r\n    user-select:none;   \r\n`;\r\n\r\nconst UserArea = (props) => {\r\n    const userList = props.userList.filter(el => \r\n        el.chat === props.selectedChatRoom.title\r\n    );\r\n    return(\r\n        <Container>\r\n            <Header>{props.selectedChatRoom.title}</Header>\r\n            <InviteButton onClick={props.reverseTotalUserModal}>모든 접속자</InviteButton>\r\n            <MemberCounter>현재 채팅방 접속자-{userList.length}</MemberCounter>\r\n            <MemberContainer userList={userList} />\r\n            <Settings myId={props.myId} />\r\n        </Container>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return state;\r\n};\r\n\r\nexport default connect(mapStateToProps, { setId, updateUser, reverseTotalUserModal })(UserArea);","import React, {useState,useEffect, createRef} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport styled from 'styled-components';\r\n\r\n\r\nconst Container = styled.div`\r\n    display:flex;\r\n    flex-direction:column;\r\n    width:100%;\r\n    flex-grow:1;\r\n    max-height:${props=>props.height};\r\n    overflow:auto;\r\n    &::-webkit-scrollbar-track{\r\n        box-shadow: inset 0 0 6px rgba(0,0,0,0.3);\r\n        border-radius: 10px;\r\n        background-color: rgb(54,57,63);\r\n    }\r\n    &::-webkit-scrollbar{\r\n        width: 12px;\r\n        background-color: rgb(54,57,63);\r\n    }\r\n    &::-webkit-scrollbar-thumb{\r\n        border-radius: 10px;\r\n        box-shadow: inset 0 0 6px rgba(0,0,0,.3);\r\n        background-color: rgb(32,34,37);\r\n    }\r\n`;\r\n\r\nconst Message=styled.div`\r\n    width:100%;\r\n    height:48px;\r\n    display:flex;\r\n    flex-direction:row;\r\n    margin:20px 0 0 0;\r\n`;\r\n\r\nconst Icon=styled.img`\r\n    width:40px;\r\n    height:40px;\r\n    border-radius:20px;\r\n    margin:5px 20px 0 20px;\r\n`;\r\n\r\nconst RightCol=styled.div`\r\n    \r\n`;\r\n\r\nconst NameArea=styled.div`\r\n    height:22px;\r\n    display:flex;\r\n    flex-direction:row;\r\n    align-items:center;\r\n`;\r\n\r\nconst Name=styled.span`\r\n    height:21px;\r\n    line-height:21px;\r\n    font-size:16px;\r\n    color:white;\r\n    margin:0 10px 0 0;\r\n`;\r\n\r\nconst Time=styled.span`\r\n    color:rgb(114,118,125);\r\n    font-size:12px;\r\n`;\r\n\r\nconst Contents=styled.div`\r\n    color:#DCDDDE;\r\n    font-size:16px;\r\n    line-height:22px;\r\n    padding-right:80px;\r\n`;\r\n\r\nconst Emoji=styled.img`\r\n    width:22px;\r\n    position:relative;\r\n    top:5px;\r\n    height:22px;\r\n    margin:0 4px 0 0;\r\n`;\r\n\r\nconst MessageType2=styled.div`\r\n    padding:0 80px 0 80px;\r\n    margin:3px 0 0 0;\r\n    color:#DCDDDE;\r\n    font-size:16px;\r\n`;\r\n\r\nconst ChatBox = (props) => {\r\n    const Messages=props.selectedChatRoom.chatLog.map(el=>{\r\n        let imgSrc=process.env.PUBLIC_URL+'/img/default-img.jpg';\r\n        \r\n        const ojunohu = el.hours>=12?'오후':'오전';\r\n        const hours_=el.hours>12? el.hours-12:el.hours;\r\n        const minutes_=el.minutes<10? `0${el.minutes}`:`${el.minutes}`;\r\n        return(\r\n            <Message key={Math.random().toString()}>\r\n                <Icon src={imgSrc} />\r\n                <RightCol>\r\n                    <NameArea>\r\n                        <Name>{el.writer}</Name><Time>{el.years}-{el.months}-{el.days} {ojunohu} {hours_}:{minutes_}</Time>\r\n                    </NameArea>\r\n                    <Contents>\r\n                        {el.content}\r\n                    </Contents>\r\n                </RightCol>\r\n            </Message>\r\n        );\r\n    });\r\n\r\n    const height=window.innerHeight-150+'px';\r\n    const [containerRef, setContainerRef] = useState(()=>createRef());\r\n    useEffect(()=>{\r\n        containerRef.current.scrollTop=containerRef.current.scrollHeight;\r\n    })\r\n    return(\r\n        <Container ref={containerRef} height={height} onClick={()=>props.setEmojiBox(false)}>\r\n            {Messages}\r\n        </Container>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return state;\r\n};\r\n\r\nexport default connect(mapStateToProps)(ChatBox);","import React, {useState, useEffect} from 'react';\r\nimport styled from 'styled-components';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { createNewChatLog, selectChatRoom } from '../actions';\r\nimport FriendsMessage from './FriendsMessage';\r\n\r\nimport ws from '../apis/webSocket';\r\n\r\nconst Container = styled.div`\r\n    height:68px;\r\n    padding:0 16px;\r\n    margin: 16px;\r\n    box-sizing:border-box;\r\n    background-color:rgb(64,68,75);\r\n    display:flex;\r\n    flex-direction:row;\r\n    border-radius:8px;\r\n`;\r\n\r\nconst Message = styled.div`\r\n    color:white;\r\n    margin:0;\r\n    height:100%;\r\n    flex-grow:1;\r\n    padding:8px 0;\r\n    box-sizing:border-box;\r\n    white-space:normal;\r\n    overflow:hidden;\r\n    &:focus{\r\n        outline:none;\r\n    }\r\n`;\r\n\r\nconst EmojiButton = styled.img`\r\n    width:22px;\r\n    height:22px;\r\n    margin:10px;\r\n    cursor:pointer;\r\n`;\r\n\r\nconst EmojiWrap = styled.div`\r\n    position:relative;\r\n    width:0;\r\n    height:0;\r\n`;\r\n\r\nconst EmojiBox = styled.div`\r\n    position:absolute;\r\n    width:200px;\r\n    height:80px;\r\n    left:-200px;\r\n    top:-80px;\r\n    background-color:rgb(47,49,54);\r\n    border-radius:10px;\r\n`;\r\n\r\nconst ChatInput = (props) => {\r\n\r\n    const submitMessage = (evt) => {\r\n        if (evt.key==='Enter') {\r\n            const msg = evt.currentTarget.innerText;\r\n            const t = new Date();\r\n            evt.currentTarget.innerHTML = \"\";\r\n            let msgObj = {\r\n                chatRoomTitle: props.selectedChatRoom.title,\r\n                writer: props.myId,\r\n                years: (Number)(t.getFullYear()),\r\n                months: (Number)(t.getMonth()+1),\r\n                days: (Number)(t.getDate()),\r\n                hours: (Number)(t.getHours()),\r\n                minutes: (Number)(t.getMinutes()),\r\n                content: msg   \r\n            }\r\n            props.createNewChatLog(msgObj);\r\n            let obj1 = {\r\n                type: 'SOCKET_CHAT_UPDATE',\r\n                payload1: JSON.stringify(msgObj),\r\n                payload2: props.selectedChatRoom.title\r\n            };\r\n            ws.send(JSON.stringify(obj1));\r\n        }\r\n    };\r\n\r\n    return(\r\n        <Container>\r\n            <Message onKeyUp={submitMessage} contentEditable={true} onFocus={()=>props.setEmojiBox(false)} suppressContentEditableWarning={true}></Message>\r\n            <EmojiButton onClick={(evt)=>props.setEmojiBox(!props.emojiBox)} src={process.env.PUBLIC_URL+\"/img/emoji-button.jpg\"}/>\r\n            {props.emojiBox&&<EmojiWrap><EmojiBox></EmojiBox></EmojiWrap>}\r\n        </Container>\r\n    );\r\n}; \r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return state;\r\n}\r\n\r\nexport default connect(mapStateToProps, { createNewChatLog, selectChatRoom })(ChatInput);","import React, {useState} from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport ChatBox from './ChatBox';\r\nimport ChatInput from './ChatInput';\r\n\r\nconst Container = styled.div`\r\n    flex-grow:1;\r\n    height:100%;\r\n    background-color:#36393f;\r\n    display:flex;\r\n    flex-direction:column;\r\n`;\r\n\r\nconst Header = styled.div`\r\n    width:100%;\r\n    height:48px;\r\n    padding:0 8px;\r\n    display:flex;\r\n    flex-direction:row;\r\n    align-items:center;\r\n    box-sizing:border-box;\r\n    border-bottom:1px #000 solid;\r\n`;\r\n\r\nconst HeaderIcon = styled.img`\r\n    width:24px;\r\n    height:24px;\r\n    margin:0 10px;\r\n`;\r\n\r\nconst HeaderTitle=styled.span`\r\n    height:24px;\r\n    flex-grow:1;\r\n    font-size:16px;\r\n    font-weight:bold;\r\n    color:white;\r\n`;\r\n\r\nfunction ChatArea(props){\r\n    const [emojiBox, setEmojiBox]=useState(false);\r\n\r\n    return (\r\n    <Container>\r\n        <Header>\r\n            <HeaderIcon src={process.env.PUBLIC_URL+\"/img/hashtag-icon.PNG\"} />\r\n            <HeaderTitle>채팅창</HeaderTitle>\r\n        </Header>\r\n        <ChatBox setEmojiBox={setEmojiBox} />\r\n        <ChatInput emojiBox={emojiBox} setEmojiBox={setEmojiBox} />\r\n    </Container>\r\n    );\r\n}\r\n\r\nexport default ChatArea;","import React from 'react';\r\nimport styled, {keyframes} from 'styled-components';\r\n\r\n\r\nconst bounceAnimation = keyframes`\r\n    0%   { transform: scale(1,1)      translateY(0); }\r\n    10%  { transform: scale(1.1,.9)   translateY(0); }\r\n    30%  { transform: scale(.9,1.1)   translateY(-30px); }\r\n    50%  { transform: scale(1.05,.95) translateY(0); }\r\n    57%  { transform: scale(1,1)      translateY(-7px); }\r\n    64%  { transform: scale(1,1)      translateY(0); }\r\n    100% { transform: scale(1,1)      translateY(0); }\r\n`\r\n\r\nconst Container = styled.div`\r\n    width:100%;\r\n    height:100%;\r\n    background-color:rgb(47,49,54);\r\n    display:flex;\r\n    align-items:center;\r\n    justify-content:center;\r\n    position:absolute;\r\n    left:0;\r\n    top:0;\r\n`;\r\n\r\nconst LoadingIcon = styled.img`\r\n    width:130px;\r\n    height:80px;\r\n    animation: ${bounceAnimation} 2s 1s infinite linear alternate;\r\n`;\r\n\r\nconst LoadingMsg = styled.h1`\r\n    color: white;\r\n    font-size: 32px;\r\n`;\r\n\r\nfunction Loading(){\r\n    return(\r\n        <Container>\r\n            <LoadingMsg>서버에 접속중입니다. 3초안에 접속이 안되면 새로고침해주세요..!</LoadingMsg>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Loading;","import React, {useState, useRef} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport styled from 'styled-components';\r\n\r\nimport { openCreateChatRoom, closeCreateChatRoom, createNewChat } from '../actions';\r\n\r\n\r\nconst Container = styled.div`\r\n    position:absolute;\r\n    top:0;\r\n    left:0;\r\n    width:100%;\r\n    height:100%;\r\n    background-color:rgba(0,0,0,0.5);\r\n    display:flex;\r\n    flex-direction:column;\r\n    align-items:center;\r\n    justify-content:center;\r\n`;\r\n\r\nconst Box=styled.form`\r\n    width:540px;\r\n    height:400px;\r\n    background-color:#fff;\r\n    display:flex;\r\n    flex-direction:column;\r\n    align-items:center;\r\n    border-radius:5px;\r\n`;\r\n\r\nconst Header=styled.div`\r\n    color:#7289da;\r\n    font-size:18px;\r\n    font-weight:bold;\r\n    padding-top:10px;\r\n`;\r\n\r\nconst TitleWrap=styled.div`\r\n    margin-top:50px;\r\n    flex-grow:1;\r\n`;\r\n\r\nconst Title=styled.span`\r\n    color:#4f5660;\r\n    font-size:11px;\r\n`;\r\n\r\nconst TitleInput=styled.input`\r\n    padding:10px 4px;\r\n    outline:none;\r\n    border:none;\r\n    border-bottom:3px solid #e3e5e8;\r\n`;\r\n\r\nconst SubmitButton=styled.button`\r\n    color:white;\r\n    background-color:#7289da;\r\n    border-radius:3px;\r\n    font-size:14px;\r\n    font-weight:bold;\r\n    border:none;\r\n    width:200px;\r\n    height:50px;\r\n    margin:0 0 20px 0;\r\n`;\r\n\r\nconst CreateChatModal = ({ openCreateChatRoom, closeCreateChatRoom, createNewChat }) => {\r\n\r\n    const nameRef = useRef();\r\n\r\n    const requestNewChat = (evt) => {\r\n        evt.preventDefault();\r\n        closeCreateChatRoom();\r\n        createNewChat(\r\n            {\r\n                name: nameRef.current.value,\r\n                friends: ['Me'],\r\n                contextMenu: false,\r\n                chatLog: []\r\n            }\r\n        );\r\n    };\r\n\r\n    return (\r\n        <Container>\r\n            <Box onSubmit={requestNewChat} onClick={(evt)=>{evt.stopPropagation();}}>\r\n                <Header>채팅방 만들기</Header>\r\n                <TitleWrap>\r\n                    <Title>채팅방 이름 : </Title>\r\n                    <TitleInput ref={nameRef} type=\"text\" placeholder=\"채팅방 이름을 입력하세요.\"/>\r\n                </TitleWrap>\r\n                <SubmitButton>만들기</SubmitButton>\r\n            </Box>\r\n        </Container>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return state;\r\n};\r\n\r\nexport default connect(mapStateToProps, { openCreateChatRoom, closeCreateChatRoom, createNewChat })(CreateChatModal);","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\n\r\nconst Container = styled.div`\r\n    flex-grow:1;\r\n    background-color:rgb(54,57,63);\r\n    display:flex;\r\n    align-items:center;\r\n    justify-content:center;\r\n`;\r\n\r\nconst Message = styled.div`\r\n    font-size:32px;\r\n    color:rgb(114, 137, 218);\r\n    font-weight:bold;\r\n    user-select:none;\r\n`;\r\n\r\nfunction NoChatAlert(props){\r\n    return (\r\n        <Container>\r\n            <Message>채팅방을 선택해주세요..!</Message>\r\n        </Container>\r\n    )\r\n}\r\n\r\n\r\nexport default NoChatAlert;","import React, {useEffect, useRef} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport styled from 'styled-components';\r\n\r\nimport { reverseTotalUserModal } from '../actions';\r\n\r\nconst Container = styled.div`\r\n    position:absolute;\r\n    top:0;\r\n    left:0;\r\n    width:100%;\r\n    height:100%;\r\n    background-color:rgba(0,0,0,0.5);\r\n    display:flex;\r\n    flex-direction:column;\r\n    align-items:center;\r\n    justify-content:center;\r\n`;\r\n\r\nconst Box=styled.form`\r\n    width:540px;\r\n    height:400px;\r\n    background-color:#fff;\r\n    display:flex;\r\n    flex-direction:column;\r\n    align-items:center;\r\n    border-radius:5px;\r\n    overflow:auto;\r\n    &::-webkit-scrollbar-track{\r\n        box-shadow: inset 0 0 6px rgba(0,0,0,0.3);\r\n        background-color: #eee;\r\n    }\r\n    &::-webkit-scrollbar{\r\n        width: 12px;\r\n        background-color: rgb(54,57,63);\r\n    }\r\n    &::-webkit-scrollbar-thumb{\r\n        box-shadow: inset 0 0 6px rgba(0,0,0,.3);\r\n        background-color: #ddd;\r\n    }\r\n`;\r\n\r\nconst Header=styled.div`\r\n    color:#7289da;\r\n    font-size:18px;\r\n    font-weight:bold;\r\n    padding-top:10px;\r\n    margin-bottom:20px;\r\n`;\r\n\r\nconst FriendWrap=styled.div`\r\n    width:250px;\r\n    height:50px;\r\n    display:flex;\r\n    flex-direction:row;\r\n    align-items:center;\r\n    margin:5px 0 10px 0;\r\n    user-select:none;\r\n`;\r\n\r\nconst Image=styled.img`\r\n    width:50px;\r\n    height:50px;\r\n    border-radius:25px;\r\n    box-sizing:border-box;\r\n    border:solid 1px black;\r\n`;\r\n\r\nconst Name=styled.span`\r\n    font-size:14px;\r\n    color:black;\r\n    flex-grow:1;\r\n`;\r\n\r\nconst InviteButton=styled.button`\r\n    background-color:${\r\n        props=>\r\n        props.inviting==='done'? '#c3c6c9':'#43b581'\r\n    };\r\n    cursor:${\r\n        props=>\r\n        props.inviting==='done'? 'normal':'pointer'\r\n    };\r\n    color:white;\r\n    border:none;\r\n    outline:none;\r\n    width:100px;\r\n    height:30px;\r\n\r\n`;\r\n\r\n\r\nconst TotalUserModal = (props) => {\r\n\r\n    const boxRef = useRef();\r\n\r\n    const onBoxClick = (evt) => {\r\n        if (!boxRef.current.contains(evt.target)){\r\n            props.reverseTotalUserModal();\r\n        } \r\n    }\r\n\r\n    useEffect(()=>{\r\n        setTimeout(() => {\r\n            document.body.addEventListener('click', onBoxClick);\r\n        }, 100);\r\n        \r\n        return () => {\r\n            document.body.removeEventListener('click', onBoxClick);\r\n        };\r\n    }, []);\r\n    \r\n    const userList = props.userList.map(el => {\r\n        let loc = el.chat ===\" \"? \"선택 중\": el.chat;\r\n        return(\r\n            <FriendWrap key={el.name}>\r\n                    <Image src={process.env.PUBLIC_URL+\"/img/default-img.jpg\"} />\r\n                    <Name>{el.name}</Name>\r\n                    <InviteButton inviting=\"done\" onClick={evt=>evt.preventDefault()}>{loc}</InviteButton>\r\n            </FriendWrap>\r\n        );\r\n    });\r\n    return (\r\n        <Container>\r\n            <Box ref={boxRef}>\r\n                <Header>모든 접속자</Header>\r\n                {userList}\r\n            </Box>\r\n        </Container>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return state;\r\n};\r\nexport default connect(mapStateToProps, { reverseTotalUserModal })(TotalUserModal);","import React, { useEffect, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { setId, updateUser, selectChatRoom, updateSocketChatLog } from '../actions';\r\n\r\nimport ChatRoomList from './ChatRoomList';\r\nimport UserArea from './UserArea';\r\nimport ChatArea from './ChatArea';\r\nimport Loading from './Loading';\r\nimport CreateServerModal from './CreateChatModal';\r\nimport NoChatAlert from './NoChatAlert';\r\n\r\nimport ws from '../apis/webSocket';\r\nimport TotalUserModal from './TotalUserModal';\r\n\r\nconst Container = styled.div`\r\n  position:absolute;\r\n  top:0;\r\n  left:0;\r\n  width:100%;\r\n  height:100%;\r\n  display:flex;\r\n\r\n`;\r\n\r\n\r\nfunction App({ createModal, selectedChatRoom, selectChatRoom, setId, updateSocketChatLog, updateUser, totalUserModal }){\r\n  \r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    ws.onmessage = (msg) => {\r\n      let json = JSON.parse(msg.data);\r\n\r\n      switch (json.type) {\r\n        case 'SET_ID':\r\n          setId(json);\r\n          return;\r\n        case 'UPDATE_USER_INFO':\r\n          updateUser(json.payload1);\r\n          return;\r\n        case 'UPDATE_CHAT_LOG':\r\n          if (json.payload1 === selectedChatRoom.title) {\r\n            selectChatRoom(json.payload1);\r\n          }\r\n          return;\r\n      }\r\n      if(json.type==='SOCKET_CHAT_UPDATE'){\r\n        if (json.payload2 === selectedChatRoom.title) {\r\n          updateSocketChatLog(json.payload1);\r\n        }\r\n      }\r\n    };\r\n    ws.onopen = (msg) => {\r\n      setLoading(false);\r\n      console.log(\"연결\");\r\n    }\r\n    ws.onclose = (msg) => {\r\n      \r\n    };\r\n  });\r\n\r\n  const contents = (() => {\r\n    \r\n    if (loading) {\r\n      return (\r\n        <Container>\r\n          <Loading />\r\n        </Container>\r\n      );\r\n    } else {\r\n      return (\r\n        <Container>\r\n          <ChatRoomList />\r\n          {selectedChatRoom&&\r\n          <UserArea />}\r\n          {selectedChatRoom&&\r\n          <ChatArea />}\r\n          {!selectedChatRoom&&\r\n          <NoChatAlert />}\r\n          {createModal&&\r\n          <CreateServerModal />}\r\n          {totalUserModal&&\r\n          <TotalUserModal />}\r\n        </Container>\r\n      );\r\n    }\r\n  })();\r\n\r\n  \r\n  return contents;\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return state;\r\n};\r\n\r\nexport default connect(mapStateToProps, { setId, selectChatRoom, updateSocketChatLog, updateUser })(App);\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport { Provider } from 'react-redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport reducers from './reducers';\r\nimport App from './components/App';\r\n\r\nconst store = createStore(reducers, applyMiddleware(thunk));\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}